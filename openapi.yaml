openapi: 3.0.0
info:
  title: PKM API
  description: API for managing everything in the knowledge management system.
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: Development server url

paths:
  /notes:
    get:
      tags:
        - notes
      summary: Get a list of all notes
      operationId: getNotes
      responses:
        '200':
          description: A list of notes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/note'
    put:
      tags:
        - notes
      summary: Create or update a note
      operationId: createOrUpdateNote
      requestBody:
        description: The note to create or update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/note'
      responses:
        '200':
          description: Note created or updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/note'
        '400':
          description: Invalid request
        '500':
          description: Internal server error
  /notes/{id}:
    get:
      tags:
        - notes
      summary: Get a specific note by ID
      operationId: getNoteById
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the note to retrieve
          schema:
            type: string
      responses:
        '200':
          description: A single note
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/note'
        '404':
          description: Note not found
    delete:
      tags:
        - notes
      summary: Delete a specific note by ID
      operationId: deleteNoteById
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the note to delete
          schema:
            type: string
      responses:
        '204':
          description: Note deleted successfully
        '404':
          description: Note not found

  /folders:
    get:
      tags:
        - folders
      summary: Get a list of all folders
      operationId: getFolders
      responses:
        '200':
          description: A list of folders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/folder'
  /folders/{id}:
    get:
      tags:
        - folders
      summary: Get a specific folder by ID
      operationId: getFolderById
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the folder to retrieve
          schema:
            type: string
      responses:
        '200':
          description: A folder object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/folder'
        '404':
          description: Folder not found


  /ai/chat:
    post:
      tags:
        - ai
      summary: Chat with the assistant
      operationId: chatWithAI
      requestBody:
        description: User's message to the assistant
        content:
          application/json:
            schema:
              type: object
              required:
                - message
              properties:
                message:
                  type: string
      responses:
        '200':
          description: AI response
          content:
            application/json:
              schema:
                type: object
                properties:
                  response:
                    type: string
  /ai/notes:
    post:
      tags:
        - ai
      summary: Generate a note based on AI's response
      operationId: createNoteFromAI
      requestBody:
        description: User's message to the assistant with folder info
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIRequest'
      responses:
        '201':
          description: AI-generated note created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/note'
components:
  schemas:
    AIRequest:
      type: object
      required:
        - message
        - folder
      properties:
        message:
          type: string
          description: The user's message to the AI, asking to create a note
        folder:
          type: string
          description: The folder where the note should be placed (folder ID)
        createNoteIfPossible:
          type: boolean
          default: true
          description: Flag to indicate if the AI should generate a note from the message
    note:
      type: object
      required:
        - id
        - title
      properties:
        id:
          type: string
          description: The unique identifier for the note
        title:
          type: string
          description: The title of the note
        content:
          type: string
          description: The content of the note (markdown formatted)
        content-html:
          type: string
          description: The content of the note (html formatted)
        author:
          type: string
          description: The author of the note
        source_url:
          type: string
          description: The URL source of the note
        folder:
          type: string
          description: The ID of the folder the note belongs to
        created:
          type: string
          format: date-time
          description: The timestamp when the note was created
        updated:
          type: string
          format: date-time
          description: The timestamp when the note was last updated
    folder:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          description: The unique identifier for the folder
        name:
          type: string
          description: The name of the folder
        icon:
          type: string
          description: The icon of the folder
